---

- include_vars: "defaults/main.yml"

# We need to remove ONLY_FULL_GROUP_BY from the sql_mode:
# http://craftcms.stackexchange.com/questions/12084/getting-this-sql-error-group-by-incompatible-with-sql-mode-only-full-group-by
# https://www.sitepoint.com/quick-tip-how-to-permanently-change-sql-mode-in-mysql/
# Although setting the sql_mode in /etc/mysql/my.cnf should work, it doesn't seem to
# be picked up when mysqld is run under Ubuntu 16.04.
# Prove that this works by starting a mysql session and running:
#  SELECT @@sql_mode;
# - name: ensure craft cms works with sql mode
#   lineinfile: dest=/lib/systemd/system/mysql.service
#               regexp='^ExecStart=\/usr\/sbin\/mysqld'
#               line='ExecStart=/usr/sbin/mysqld --sql-mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
#               state=present
#   tags: configure

- name: ensure craft cms works with sql mode
  lineinfile: dest=/usr/share/mysql/mysql-systemd-start
              regexp='mysql -u administrator'
              insertafter='server_up=true'
              line='mysql -u administrator -p{{ ansible_role_mysql.db_password }} -e "set global sql_mode=\'NO_ENGINE_SUBSTITUTION\';"'
              state=present
  tags: configure

- name: create administrator user and grant all privileges on all dbs
  mysql_user:
    state=present
    name=administrator
    password="{{ ansible_role_mysql.db_password }}"
    priv=*.*:ALL
    login_user=root
    login_password="{{ ansible_role_mysql.password }}"
  tags: configure

- name: create our project databases
  mysql_db:
    db="{{ item }}"
    encoding="{{ ansible_role_mysql.encoding }}"
    collation="{{ ansible_role_mysql.collation }}"
    state=present
    login_user=root
    login_password="{{ ansible_role_mysql.password }}"
  with_items: "{{ ansible_role_mysql.dbs }}"
  tags: configure

- name: create database user and grant all privileges on the project databases
  mysql_user:
    state=present
    name="{{ ansible_role_mysql.db_user }}"
    password="{{ ansible_role_mysql.db_password }}"
    priv="{{ item }}".*:ALL
    login_user=root
    login_password="{{ ansible_role_mysql.password }}"
  with_items: "{{ ansible_role_mysql.dbs }}"
  tags: configure
